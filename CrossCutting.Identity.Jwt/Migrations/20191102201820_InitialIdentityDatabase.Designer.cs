// <auto-generated />
using System;
using CrossCutting.Identity.Jwt.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrossCutting.Identity.Jwt.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20191102201820_InitialIdentityDatabase")]
    partial class InitialIdentityDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrossCutting.Identity.Jwt.Entities.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "system super administrator",
                            Name = "SUPERADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Description = "system administrator",
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            Description = "blog writer",
                            Name = "WRITER"
                        });
                });

            modelBuilder.Entity("CrossCutting.Identity.Jwt.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasAlternateKey("UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08a029db-1b12-4535-863a-f4ad30422219"),
                            Email = "Eng.balaghi@yahoo.com",
                            FullName = "Yaser Balaghi",
                            Password = "123456",
                            SecurityStamp = "1b8f820c-87dd-4fd7-b890-ed9191d0231f",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CrossCutting.Identity.Jwt.Entities.ApplicationUserRoles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("08a029db-1b12-4535-863a-f4ad30422219"),
                            RoleId = 2
                        },
                        new
                        {
                            UserId = new Guid("08a029db-1b12-4535-863a-f4ad30422219"),
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("CrossCutting.Identity.Jwt.Entities.ApplicationUserRoles", b =>
                {
                    b.HasOne("CrossCutting.Identity.Jwt.Entities.ApplicationRole", "ApplicationRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossCutting.Identity.Jwt.Entities.ApplicationUser", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
